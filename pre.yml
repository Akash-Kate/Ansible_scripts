- hosts: masters
  # remote_user: "{{userName}}"
  become: yes
  become_user: root
  gather_facts: yes
  connection: ssh

  tasks:

    - name: Install Basic utitlities
      ansible.builtin.apt:
        name:
          - apt-transport-https
          - ca-certificates
          - lsb-release
          - gnupg
          - unzip
          - git
          - curl
          - libssl-dev
          - build-essential
          - make
        state: latest
        update_cache: true

    - name: Install Docker
      ansible.builtin.apt:
        name:
          - docker
          - docker.io
          - docker-compose
          - docker-registry
        state: latest
        update_cache: true
      
    # - name: Docker post installaction step
    #   shell: /bin/bash -c "usermod -aG docker $USER && newgrp docker"
    #   become: yes

  
    - name: Install python3 pip
      ansible.builtin.apt:
        name:
          - python3-pip
        state: latest
        update_cache: true

    
    - name: donwnload install script of nvm
      get_url:
        url: https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.3/install.sh
        dest: /tmp/

  
    - name: Create containerd config file
      file:
         path: "/etc/modules-load.d/containerd.conf"
         state: "touch"

    - name: Add conf for containerd
      blockinfile:
         path: "/etc/modules-load.d/containerd.conf"
         block: |
               overlay
               br_netfilter

    - name: modprobe
      shell: |
               sudo modprobe overlay
               sudo modprobe br_netfilter


    - name: Set system configurations for Kubernetes networking
      file:
         path: "/etc/sysctl.d/99-kubernetes-cri.conf"
         state: "touch"

    - name: Add conf for containerd
      blockinfile:
         path: "/etc/sysctl.d/99-kubernetes-cri.conf"
         block: |
                net.bridge.bridge-nf-call-iptables = 1
                net.ipv4.ip_forward = 1
                net.bridge.bridge-nf-call-ip6tables = 1

    - name: Apply new settings
      command: sudo sysctl --system

    - name: install containerd
      shell: |
               sudo apt-get update && sudo apt-get install -y containerd
               sudo mkdir -p /etc/containerd
               sudo containerd config default | sudo tee /etc/containerd/config.toml
               sudo systemctl restart containerd

    - name: disable swap
      shell: |
               sudo swapoff -a
               sudo sed -i '/ swap / s/^\(.*\)$/#\1/g' /etc/fstab

    - name: install and configure dependencies
      shell: |
               sudo apt-get update && sudo apt-get install -y apt-transport-https curl
               curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -

    - name: Create kubernetes repo file
      file:
         path: "/etc/apt/sources.list.d/kubernetes.list"
         state: "touch"

    - name: Add K8s Source
      blockinfile:
         path: "/etc/apt/sources.list.d/kubernetes.list"
         block: |
               deb https://apt.kubernetes.io/ kubernetes-xenial main

    - name: install kubernetes
      shell: |
               sudo apt-get update
               sudo apt-get install -qy kubelet=1.19.0-00 kubectl=1.19.0-00 kubeadm=1.19.0-00
               sudo apt-mark hold kubelet kubeadm kubectl
    